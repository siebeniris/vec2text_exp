+ MODEL_NAME=yiyic/mt5_alephbert_heb_Hebr_32_corrector
++ pwd
+ wd=/home/cs.aau.dk/ng78zb/vec2text_exp
+ echo 'working directory /home/cs.aau.dk/ng78zb/vec2text_exp'
+ export HF_HOME=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache
+ HF_HOME=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache
+ export HF_DATASETS_CACHE=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache/datasets
+ HF_DATASETS_CACHE=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache/datasets
+ export DATASET_CACHE_PATH=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache
+ DATASET_CACHE_PATH=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache
+ export WANDB_CACHE_DIR=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache/wandb/artifcats/
+ WANDB_CACHE_DIR=/home/cs.aau.dk/ng78zb/vec2text_exp/.cache/wandb/artifcats/
+ export NCCL_P2P_LEVEL=NVL
+ NCCL_P2P_LEVEL=NVL
+ export NCCL_IB_DISABLE=1
+ NCCL_IB_DISABLE=1
+ export TORCH_NCCL_ENABLE_MONITORING=0
+ TORCH_NCCL_ENABLE_MONITORING=0
+ export TORCH_NCCL_ASYNC_ERROR_HANDLING=1
+ TORCH_NCCL_ASYNC_ERROR_HANDLING=1
+ export CUDA_VISIBLE_DEVICES=0
+ CUDA_VISIBLE_DEVICES=0
+ SIF=/home/cs.aau.dk/ng78zb/pytorch_23.10-py3.sif
+ echo 'sif /home/cs.aau.dk/ng78zb/pytorch_23.10-py3.sif'
+ echo 'launch evaluation yiyic/mt5_alephbert_heb_Hebr_32_corrector'
+ srun singularity exec --nv --cleanenv --bind /home/cs.aau.dk/ng78zb/vec2text_exp:/home/cs.aau.dk/ng78zb/vec2text_exp /home/cs.aau.dk/ng78zb/pytorch_23.10-py3.sif python -m evaluation yiyic/mt5_alephbert_heb_Hebr_32_corrector
13:4: not a valid test operator: (
13:4: not a valid test operator: 535.183.01
/home/cs.aau.dk/ng78zb/.local/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/usr/local/lib/python3.10/dist-packages/torch/_utils.py:830: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/cs.aau.dk/ng78zb/.local/lib/python3.10/site-packages/transformers/convert_slow_tokenizer.py:560: UserWarning: The sentencepiece tokenizer that you are converting to a fast tokenizer uses the byte fallback option which is not implemented in the fast tokenizers. In practice this means that the fast version of the tokenizer can produce unknown tokens whereas the sentencepiece version would have converted these unknown tokens into a sequence of byte tokens matching the original piece of text.
  warnings.warn(
Loading checkpoint shards:   0%|          | 0/10 [00:00<?, ?it/s]Loading checkpoint shards:  10%|█         | 1/10 [00:02<00:19,  2.19s/it]Loading checkpoint shards:  20%|██        | 2/10 [00:06<00:26,  3.28s/it]Loading checkpoint shards:  30%|███       | 3/10 [00:10<00:24,  3.54s/it]Loading checkpoint shards:  40%|████      | 4/10 [00:14<00:23,  3.89s/it]Loading checkpoint shards:  50%|█████     | 5/10 [00:18<00:19,  4.00s/it]Loading checkpoint shards:  60%|██████    | 6/10 [00:19<00:11,  2.77s/it]Loading checkpoint shards:  70%|███████   | 7/10 [00:21<00:07,  2.55s/it]Loading checkpoint shards:  80%|████████  | 8/10 [00:22<00:04,  2.12s/it]Loading checkpoint shards:  90%|█████████ | 9/10 [00:26<00:02,  2.62s/it]Loading checkpoint shards: 100%|██████████| 10/10 [00:29<00:00,  2.75s/it]Loading checkpoint shards: 100%|██████████| 10/10 [00:29<00:00,  2.91s/it]
Loading checkpoint shards:   0%|          | 0/8 [00:00<?, ?it/s]Loading checkpoint shards:  12%|█▎        | 1/8 [00:02<00:14,  2.09s/it]Loading checkpoint shards:  25%|██▌       | 2/8 [00:06<00:21,  3.53s/it]Loading checkpoint shards:  38%|███▊      | 3/8 [00:10<00:19,  3.85s/it]Loading checkpoint shards:  50%|█████     | 4/8 [00:16<00:18,  4.67s/it]Loading checkpoint shards:  62%|██████▎   | 5/8 [00:21<00:13,  4.58s/it]Loading checkpoint shards:  75%|███████▌  | 6/8 [00:21<00:06,  3.16s/it]Loading checkpoint shards:  88%|████████▊ | 7/8 [00:23<00:02,  2.86s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:25<00:00,  2.40s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:25<00:00,  3.16s/it]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:02<00:11, 36.06 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 166/500 [00:02<00:04, 74.09 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 250/500 [00:02<00:02, 121.86 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 254.09 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:03<00:00, 227.11 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:03<00:00, 145.12 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:02<00:10, 40.96 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:02<00:01, 131.11 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 226.76 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 272.79 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 177.68 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:06, 69.43 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:01<00:01, 167.27 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:01<00:00, 278.45 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 275.67 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 211.27 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:07, 58.39 examples/s]Running tokenizer on dataset (num_proc=6):  34%|███▎      | 168/500 [00:01<00:02, 124.07 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:02<00:01, 139.07 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 193.72 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 304.41 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 189.42 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:09, 43.61 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 247.11 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 273.99 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 203.71 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:02<00:11, 36.27 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 177.40 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 218.28 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:03<00:00, 162.43 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:09, 45.03 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:02<00:01, 154.22 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 314.01 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 208.07 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:08, 49.08 examples/s]Running tokenizer on dataset (num_proc=6):  34%|███▎      | 168/500 [00:01<00:03, 108.53 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 317.11 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 229.95 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:08, 51.71 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 166/500 [00:01<00:02, 114.04 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 333/500 [00:01<00:00, 260.90 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 242.16 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:09, 44.80 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 195.33 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 218.66 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 273.75 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 190.99 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:07, 57.41 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:01<00:01, 183.67 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:01<00:00, 294.55 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 242.80 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:06, 61.81 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 167/500 [00:01<00:02, 117.59 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:01<00:00, 267.01 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 262.05 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 323.58 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 214.87 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:09, 46.15 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 167/500 [00:02<00:03, 95.11 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 228.60 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 235.19 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 280.13 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 180.21 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:00<00:04, 87.40 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 250/500 [00:01<00:01, 246.52 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:01<00:00, 317.02 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:01<00:00, 381.76 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:01<00:00, 453.37 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:01<00:00, 297.92 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:05, 74.20 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 251/500 [00:01<00:01, 172.74 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:01<00:00, 291.11 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 244.15 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:02<00:10, 40.27 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 180.84 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 287.22 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 194.35 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:07, 52.81 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 167/500 [00:01<00:03, 108.65 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:02<00:00, 216.41 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 276.03 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 189.49 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:09, 43.70 examples/s]Running tokenizer on dataset (num_proc=6):  33%|███▎      | 167/500 [00:02<00:03, 96.84 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 298.81 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 208.57 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 84/500 [00:01<00:07, 56.30 examples/s]Running tokenizer on dataset (num_proc=6):  67%|██████▋   | 334/500 [00:01<00:00, 263.74 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:01<00:00, 399.31 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:01<00:00, 268.59 examples/s]
Running tokenizer on dataset (num_proc=6):   0%|          | 0/500 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=6):  17%|█▋        | 83/500 [00:01<00:08, 47.61 examples/s]Running tokenizer on dataset (num_proc=6):  50%|█████     | 250/500 [00:01<00:01, 165.77 examples/s]Running tokenizer on dataset (num_proc=6):  83%|████████▎ | 417/500 [00:02<00:00, 294.42 examples/s]Running tokenizer on dataset (num_proc=6): 100%|██████████| 500/500 [00:02<00:00, 221.36 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 26153.59 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30129.33 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30384.70 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30267.17 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30551.13 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30462.38 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 29886.73 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30488.51 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30656.98 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30537.79 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30474.77 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30624.75 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30459.72 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 17985.56 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30632.35 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30619.38 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30233.14 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30598.38 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30755.44 examples/s]
Filter:   0%|          | 0/500 [00:00<?, ? examples/s]Filter: 100%|██████████| 500/500 [00:00<00:00, 30680.75 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  26%|██▌       | 128/500 [00:01<00:04, 92.73 examples/s]Map:  77%|███████▋  | 384/500 [00:01<00:00, 310.44 examples/s]Map: 100%|██████████| 500/500 [00:01<00:00, 312.52 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 1858.50 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1887.39 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1853.84 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 1914.40 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1949.89 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1914.12 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 1806.01 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1870.74 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 1834.56 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2263.66 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2343.23 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2296.41 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2241.00 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2317.69 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2275.26 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2336.87 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2366.30 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2469.84 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2457.34 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2701.12 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2663.41 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2652.30 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2615.84 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2752.86 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2713.34 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2420.18 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2404.29 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2408.90 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2420.44 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2388.52 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2375.39 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2388.98 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2355.92 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2351.23 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2361.79 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2331.46 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2241.04 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2282.79 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2248.64 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2422.71 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2406.76 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2435.99 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2426.00 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2435.26 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2425.25 examples/s]
Map:   0%|          | 0/500 [00:00<?, ? examples/s]Map:  51%|█████     | 256/500 [00:00<00:00, 2374.58 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2395.42 examples/s]Map: 100%|██████████| 500/500 [00:00<00:00, 2362.22 examples/s]
generating from val:   0%|          | 0/250 [00:00<?, ?it/s]generating from val:   0%|          | 1/250 [01:07<4:41:33, 67.85s/it]generating from val:   1%|          | 2/250 [02:14<4:37:09, 67.05s/it]generating from val:   1%|          | 3/250 [03:21<4:36:09, 67.08s/it]generating from val:   2%|▏         | 4/250 [04:29<4:36:09, 67.36s/it]generating from val:   2%|▏         | 5/250 [05:36<4:34:47, 67.30s/it]generating from val:   2%|▏         | 6/250 [06:43<4:33:57, 67.37s/it]generating from val:   3%|▎         | 7/250 [07:51<4:32:32, 67.29s/it]generating from val:   3%|▎         | 8/250 [08:58<4:31:20, 67.28s/it]generating from val:   4%|▎         | 9/250 [10:05<4:29:44, 67.15s/it]generating from val:   4%|▍         | 10/250 [11:11<4:27:47, 66.95s/it]generating from val:   4%|▍         | 11/250 [12:18<4:27:00, 67.03s/it]generating from val:   5%|▍         | 12/250 [13:26<4:25:59, 67.06s/it]generating from val:   5%|▌         | 13/250 [14:32<4:24:34, 66.98s/it]generating from val:   6%|▌         | 14/250 [15:40<4:24:34, 67.27s/it]generating from val:   6%|▌         | 15/250 [16:47<4:22:43, 67.08s/it]generating from val:   6%|▋         | 16/250 [17:55<4:22:13, 67.24s/it]generating from val:   7%|▋         | 17/250 [19:01<4:20:33, 67.10s/it]generating from val:   7%|▋         | 18/250 [20:08<4:18:49, 66.94s/it]generating from val:   8%|▊         | 19/250 [21:15<4:18:06, 67.04s/it]generating from val:   8%|▊         | 20/250 [22:22<4:16:24, 66.89s/it]generating from val:   8%|▊         | 21/250 [23:28<4:15:08, 66.85s/it]generating from val:   9%|▉         | 22/250 [24:35<4:14:10, 66.89s/it]generating from val:   9%|▉         | 23/250 [25:42<4:13:07, 66.91s/it]generating from val:  10%|▉         | 24/250 [26:50<4:12:30, 67.04s/it]generating from val:  10%|█         | 25/250 [27:56<4:10:46, 66.87s/it]generating from val:  10%|█         | 26/250 [29:03<4:09:36, 66.86s/it]generating from val:  11%|█         | 27/250 [30:09<4:08:00, 66.73s/it]generating from val:  11%|█         | 28/250 [31:17<4:07:17, 66.84s/it]generating from val:  12%|█▏        | 29/250 [32:23<4:06:09, 66.83s/it]generating from val:  12%|█▏        | 30/250 [33:31<4:05:32, 66.97s/it]generating from val:  12%|█▏        | 31/250 [34:38<4:04:26, 66.97s/it]generating from val:  13%|█▎        | 32/250 [35:45<4:03:56, 67.14s/it]generating from val:  13%|█▎        | 33/250 [36:52<4:02:16, 66.99s/it]generating from val:  14%|█▎        | 34/250 [37:58<4:00:47, 66.88s/it]generating from val:  14%|█▍        | 35/250 [39:05<3:59:46, 66.92s/it]generating from val:  14%|█▍        | 36/250 [40:12<3:58:26, 66.85s/it]generating from val:  15%|█▍        | 37/250 [41:19<3:57:24, 66.88s/it]generating from val:  15%|█▌        | 38/250 [42:26<3:56:44, 67.00s/it]generating from val:  16%|█▌        | 39/250 [43:33<3:55:45, 67.04s/it]generating from val:  16%|█▌        | 40/250 [44:41<3:54:54, 67.12s/it]generating from val:  16%|█▋        | 41/250 [45:48<3:53:56, 67.16s/it]generating from val:  17%|█▋        | 42/250 [46:55<3:52:42, 67.13s/it]generating from val:  17%|█▋        | 43/250 [48:03<3:52:20, 67.35s/it]generating from val:  18%|█▊        | 44/250 [49:09<3:50:16, 67.07s/it]generating from val:  18%|█▊        | 45/250 [50:17<3:49:28, 67.17s/it]generating from val:  18%|█▊        | 46/250 [51:25<3:49:08, 67.40s/it]generating from val:  19%|█▉        | 47/250 [52:32<3:48:02, 67.40s/it]generating from val:  19%|█▉        | 48/250 [53:39<3:46:08, 67.17s/it]generating from val:  20%|█▉        | 49/250 [54:46<3:45:28, 67.31s/it]generating from val:  20%|██        | 50/250 [55:54<3:44:24, 67.32s/it]generating from val:  20%|██        | 51/250 [57:01<3:42:55, 67.21s/it]generating from val:  21%|██        | 52/250 [58:09<3:42:48, 67.52s/it]generating from val:  21%|██        | 53/250 [59:16<3:41:07, 67.35s/it]generating from val:  22%|██▏       | 54/250 [1:00:23<3:39:57, 67.34s/it]generating from val:  22%|██▏       | 55/250 [1:01:30<3:38:13, 67.14s/it]generating from val:  22%|██▏       | 56/250 [1:02:37<3:37:04, 67.14s/it]generating from val:  23%|██▎       | 57/250 [1:03:44<3:36:17, 67.24s/it]generating from val:  23%|██▎       | 58/250 [1:04:52<3:35:19, 67.29s/it]generating from val:  24%|██▎       | 59/250 [1:05:59<3:34:00, 67.23s/it]generating from val:  24%|██▍       | 60/250 [1:07:06<3:32:38, 67.15s/it]generating from val:  24%|██▍       | 61/250 [1:08:13<3:31:08, 67.03s/it]generating from val:  25%|██▍       | 62/250 [1:09:20<3:30:16, 67.11s/it]generating from val:  25%|██▌       | 63/250 [1:10:27<3:28:48, 67.00s/it]generating from val:  26%|██▌       | 64/250 [1:11:34<3:27:50, 67.04s/it]generating from val:  26%|██▌       | 65/250 [1:12:40<3:26:16, 66.90s/it]generating from val:  26%|██▋       | 66/250 [1:13:48<3:25:22, 66.97s/it]generating from val:  27%|██▋       | 67/250 [1:14:54<3:24:10, 66.95s/it]generating from val:  27%|██▋       | 68/250 [1:16:01<3:22:44, 66.84s/it]generating from val:  28%|██▊       | 69/250 [1:17:09<3:22:14, 67.04s/it]generating from val:  28%|██▊       | 70/250 [1:18:16<3:21:22, 67.13s/it]generating from val:  28%|██▊       | 71/250 [1:19:23<3:20:17, 67.13s/it]generating from val:  29%|██▉       | 72/250 [1:20:29<3:18:35, 66.94s/it]generating from val:  29%|██▉       | 73/250 [1:21:37<3:17:33, 66.97s/it]generating from val:  30%|██▉       | 74/250 [1:22:44<3:16:35, 67.02s/it]generating from val:  30%|███       | 75/250 [1:23:51<3:15:42, 67.10s/it]generating from val:  30%|███       | 76/250 [1:24:58<3:14:32, 67.08s/it]generating from val:  31%|███       | 77/250 [1:26:05<3:13:21, 67.06s/it]generating from val:  31%|███       | 78/250 [1:27:12<3:12:18, 67.08s/it]generating from val:  32%|███▏      | 79/250 [1:28:19<3:11:13, 67.09s/it]generating from val:  32%|███▏      | 80/250 [1:29:26<3:09:59, 67.06s/it]generating from val:  32%|███▏      | 81/250 [1:30:33<3:08:56, 67.08s/it]generating from val:  33%|███▎      | 82/250 [1:31:40<3:07:50, 67.09s/it]generating from val:  33%|███▎      | 83/250 [1:32:48<3:06:59, 67.18s/it]generating from val:  34%|███▎      | 84/250 [1:33:55<3:06:08, 67.28s/it]generating from val:  34%|███▍      | 85/250 [1:35:03<3:05:10, 67.33s/it]generating from val:  34%|███▍      | 86/250 [1:36:10<3:03:39, 67.19s/it]generating from val:  35%|███▍      | 87/250 [1:37:16<3:02:10, 67.06s/it]generating from val:  35%|███▌      | 88/250 [1:38:23<3:00:59, 67.03s/it]generating from val:  36%|███▌      | 89/250 [1:39:30<2:59:51, 67.03s/it]generating from val:  36%|███▌      | 90/250 [1:40:38<2:59:14, 67.21s/it]generating from val:  36%|███▋      | 91/250 [1:41:45<2:57:57, 67.15s/it]generating from val:  37%|███▋      | 92/250 [1:42:52<2:56:22, 66.98s/it]generating from val:  37%|███▋      | 93/250 [1:43:59<2:55:48, 67.19s/it]generating from val:  38%|███▊      | 94/250 [1:45:06<2:54:25, 67.09s/it]generating from val:  38%|███▊      | 95/250 [1:46:13<2:53:05, 67.00s/it]generating from val:  38%|███▊      | 96/250 [1:47:21<2:52:39, 67.27s/it]generating from val:  39%|███▉      | 97/250 [1:48:28<2:51:47, 67.37s/it]generating from val:  39%|███▉      | 98/250 [1:49:36<2:50:30, 67.31s/it]generating from val:  40%|███▉      | 99/250 [1:50:43<2:49:15, 67.26s/it]generating from val:  40%|████      | 100/250 [1:51:49<2:47:43, 67.09s/it]generating from val:  40%|████      | 101/250 [1:52:58<2:47:21, 67.39s/it]generating from val:  41%|████      | 102/250 [1:54:05<2:46:15, 67.40s/it]generating from val:  41%|████      | 103/250 [1:55:12<2:44:36, 67.19s/it]generating from val:  42%|████▏     | 104/250 [1:56:19<2:43:32, 67.21s/it]generating from val:  42%|████▏     | 105/250 [1:57:26<2:42:20, 67.17s/it]generating from val:  42%|████▏     | 106/250 [1:58:34<2:41:36, 67.33s/it]generating from val:  43%|████▎     | 107/250 [1:59:41<2:40:21, 67.28s/it]generating from val:  43%|████▎     | 108/250 [2:00:48<2:38:54, 67.15s/it]generating from val:  44%|████▎     | 109/250 [2:01:55<2:37:53, 67.19s/it]generating from val:  44%|████▍     | 110/250 [2:03:02<2:36:27, 67.05s/it]generating from val:  44%|████▍     | 111/250 [2:04:09<2:35:31, 67.13s/it]generating from val:  45%|████▍     | 112/250 [2:05:16<2:34:27, 67.15s/it]generating from val:  45%|████▌     | 113/250 [2:06:23<2:32:46, 66.91s/it]generating from val:  46%|████▌     | 114/250 [2:07:29<2:31:31, 66.85s/it]generating from val:  46%|████▌     | 115/250 [2:08:37<2:30:38, 66.95s/it]generating from val:  46%|████▋     | 116/250 [2:09:43<2:29:04, 66.75s/it]generating from val:  47%|████▋     | 117/250 [2:10:50<2:28:06, 66.81s/it]generating from val:  47%|████▋     | 118/250 [2:11:57<2:27:16, 66.94s/it]generating from val:  48%|████▊     | 119/250 [2:13:04<2:26:01, 66.88s/it]generating from val:  48%|████▊     | 120/250 [2:14:11<2:25:11, 67.01s/it]generating from val:  48%|████▊     | 121/250 [2:15:18<2:24:03, 67.01s/it]generating from val:  49%|████▉     | 122/250 [2:16:25<2:22:55, 66.99s/it]generating from val:  49%|████▉     | 123/250 [2:17:32<2:21:47, 66.99s/it]generating from val:  50%|████▉     | 124/250 [2:18:39<2:20:30, 66.91s/it]generating from val:  50%|█████     | 125/250 [2:19:46<2:19:25, 66.92s/it]generating from val:  50%|█████     | 126/250 [2:20:53<2:18:30, 67.02s/it]generating from val:  51%|█████     | 127/250 [2:22:00<2:17:24, 67.03s/it]generating from val:  51%|█████     | 128/250 [2:23:07<2:16:24, 67.08s/it]generating from val:  52%|█████▏    | 129/250 [2:24:14<2:15:14, 67.06s/it]generating from val:  52%|█████▏    | 130/250 [2:25:21<2:14:11, 67.10s/it]generating from val:  52%|█████▏    | 131/250 [2:26:29<2:13:14, 67.18s/it]generating from val:  53%|█████▎    | 132/250 [2:27:35<2:11:40, 66.95s/it]generating from val:  53%|█████▎    | 133/250 [2:28:42<2:10:27, 66.90s/it]generating from val:  54%|█████▎    | 134/250 [2:29:49<2:09:17, 66.88s/it]generating from val:  54%|█████▍    | 135/250 [2:30:55<2:07:58, 66.77s/it]generating from val:  54%|█████▍    | 136/250 [2:32:03<2:07:08, 66.92s/it]generating from val:  55%|█████▍    | 137/250 [2:33:10<2:06:16, 67.05s/it]generating from val:  55%|█████▌    | 138/250 [2:34:17<2:04:59, 66.96s/it]generating from val:  56%|█████▌    | 139/250 [2:35:24<2:04:08, 67.10s/it]generating from val:  56%|█████▌    | 140/250 [2:36:31<2:03:09, 67.17s/it]generating from val:  56%|█████▋    | 141/250 [2:37:38<2:01:41, 66.98s/it]generating from val:  57%|█████▋    | 142/250 [2:38:44<2:00:18, 66.84s/it]generating from val:  57%|█████▋    | 143/250 [2:39:51<1:59:00, 66.74s/it]generating from val:  58%|█████▊    | 144/250 [2:40:59<1:58:22, 67.00s/it]generating from val:  58%|█████▊    | 145/250 [2:42:06<1:57:20, 67.05s/it]generating from val:  58%|█████▊    | 146/250 [2:43:13<1:56:15, 67.08s/it]generating from val:  59%|█████▉    | 147/250 [2:44:20<1:55:03, 67.02s/it]generating from val:  59%|█████▉    | 148/250 [2:45:27<1:54:02, 67.08s/it]generating from val:  60%|█████▉    | 149/250 [2:46:34<1:52:45, 66.99s/it]generating from val:  60%|██████    | 150/250 [2:47:41<1:51:33, 66.94s/it]generating from val:  60%|██████    | 151/250 [2:48:47<1:50:10, 66.78s/it]generating from val:  61%|██████    | 152/250 [2:49:54<1:49:03, 66.77s/it]generating from val:  61%|██████    | 153/250 [2:51:01<1:48:13, 66.94s/it]generating from val:  62%|██████▏   | 154/250 [2:52:08<1:47:01, 66.89s/it]generating from val:  62%|██████▏   | 155/250 [2:53:16<1:46:33, 67.30s/it]generating from val:  62%|██████▏   | 156/250 [2:54:23<1:45:20, 67.24s/it]generating from val:  63%|██████▎   | 157/250 [2:55:30<1:44:09, 67.20s/it]generating from val:  63%|██████▎   | 158/250 [2:56:38<1:43:08, 67.27s/it]generating from val:  64%|██████▎   | 159/250 [2:57:45<1:41:48, 67.13s/it]generating from val:  64%|██████▍   | 160/250 [2:58:51<1:40:36, 67.07s/it]generating from val:  64%|██████▍   | 161/250 [2:59:58<1:39:26, 67.04s/it]generating from val:  65%|██████▍   | 162/250 [3:01:05<1:38:14, 66.98s/it]generating from val:  65%|██████▌   | 163/250 [3:02:13<1:37:20, 67.14s/it]generating from val:  66%|██████▌   | 164/250 [3:03:20<1:36:14, 67.15s/it]generating from val:  66%|██████▌   | 165/250 [3:04:27<1:35:03, 67.10s/it]generating from val:  66%|██████▋   | 166/250 [3:05:34<1:34:05, 67.21s/it]generating from val:  67%|██████▋   | 167/250 [3:06:42<1:32:59, 67.23s/it]generating from val:  67%|██████▋   | 168/250 [3:07:48<1:31:41, 67.09s/it]generating from val:  68%|██████▊   | 169/250 [3:08:55<1:30:25, 66.98s/it]generating from val:  68%|██████▊   | 170/250 [3:10:02<1:29:14, 66.93s/it]generating from val:  68%|██████▊   | 171/250 [3:11:09<1:28:06, 66.92s/it]generating from val:  69%|██████▉   | 172/250 [3:12:16<1:27:15, 67.12s/it]generating from val:  69%|██████▉   | 173/250 [3:13:23<1:25:52, 66.92s/it]generating from val:  70%|██████▉   | 174/250 [3:14:30<1:24:39, 66.84s/it]generating from val:  70%|███████   | 175/250 [3:15:37<1:23:37, 66.89s/it]generating from val:  70%|███████   | 176/250 [3:16:43<1:22:27, 66.86s/it]generating from val:  71%|███████   | 177/250 [3:17:51<1:21:28, 66.96s/it]generating from val:  71%|███████   | 178/250 [3:18:57<1:20:19, 66.94s/it]generating from val:  72%|███████▏  | 179/250 [3:20:04<1:19:06, 66.85s/it]generating from val:  72%|███████▏  | 180/250 [3:21:11<1:17:55, 66.79s/it]generating from val:  72%|███████▏  | 181/250 [3:22:18<1:16:56, 66.90s/it]generating from val:  73%|███████▎  | 182/250 [3:23:26<1:16:13, 67.25s/it]generating from val:  73%|███████▎  | 183/250 [3:24:33<1:15:07, 67.28s/it]generating from val:  74%|███████▎  | 184/250 [3:25:40<1:13:47, 67.09s/it]generating from val:  74%|███████▍  | 185/250 [3:26:47<1:12:46, 67.18s/it]generating from val:  74%|███████▍  | 186/250 [3:27:55<1:11:43, 67.24s/it]generating from val:  75%|███████▍  | 187/250 [3:29:02<1:10:37, 67.26s/it]generating from val:  75%|███████▌  | 188/250 [3:30:09<1:09:23, 67.16s/it]generating from val:  76%|███████▌  | 189/250 [3:31:17<1:08:26, 67.32s/it]generating from val:  76%|███████▌  | 190/250 [3:32:24<1:07:13, 67.23s/it]generating from val:  76%|███████▋  | 191/250 [3:33:31<1:06:06, 67.23s/it]generating from val:  77%|███████▋  | 192/250 [3:34:38<1:04:57, 67.20s/it]generating from val:  77%|███████▋  | 193/250 [3:35:44<1:03:35, 66.94s/it]generating from val:  78%|███████▊  | 194/250 [3:36:51<1:02:28, 66.93s/it]generating from val:  78%|███████▊  | 195/250 [3:37:59<1:01:31, 67.11s/it]generating from val:  78%|███████▊  | 196/250 [3:39:06<1:00:16, 66.98s/it]generating from val:  79%|███████▉  | 197/250 [3:40:12<59:07, 66.94s/it]  generating from val:  79%|███████▉  | 198/250 [3:41:20<58:11, 67.15s/it]generating from val:  80%|███████▉  | 199/250 [3:42:27<57:03, 67.12s/it]generating from val:  80%|████████  | 200/250 [3:43:34<55:51, 67.03s/it]generating from val:  80%|████████  | 201/250 [3:44:41<54:50, 67.15s/it]generating from val:  81%|████████  | 202/250 [3:45:48<53:40, 67.09s/it]generating from val:  81%|████████  | 203/250 [3:46:56<52:37, 67.18s/it]generating from val:  82%|████████▏ | 204/250 [3:48:02<51:23, 67.03s/it]generating from val:  82%|████████▏ | 205/250 [3:49:09<50:15, 67.01s/it]generating from val:  82%|████████▏ | 206/250 [3:50:16<49:05, 66.95s/it]generating from val:  83%|████████▎ | 207/250 [3:51:23<47:54, 66.86s/it]generating from val:  83%|████████▎ | 208/250 [3:52:30<46:51, 66.95s/it]generating from val:  84%|████████▎ | 209/250 [3:53:37<45:51, 67.12s/it]generating from val:  84%|████████▍ | 210/250 [3:54:44<44:43, 67.08s/it]generating from val:  84%|████████▍ | 211/250 [3:55:51<43:31, 66.97s/it]generating from val:  85%|████████▍ | 212/250 [3:56:58<42:27, 67.05s/it]generating from val:  85%|████████▌ | 213/250 [3:58:05<41:21, 67.07s/it]generating from val:  86%|████████▌ | 214/250 [3:59:12<40:12, 67.02s/it]generating from val:  86%|████████▌ | 215/250 [4:00:19<39:04, 67.00s/it]generating from val:  86%|████████▋ | 216/250 [4:01:26<37:58, 67.02s/it]generating from val:  87%|████████▋ | 217/250 [4:02:33<36:51, 67.03s/it]generating from val:  87%|████████▋ | 218/250 [4:03:41<35:48, 67.15s/it]generating from val:  88%|████████▊ | 219/250 [4:04:48<34:41, 67.14s/it]generating from val:  88%|████████▊ | 220/250 [4:05:55<33:32, 67.10s/it]generating from val:  88%|████████▊ | 221/250 [4:07:01<32:17, 66.82s/it]generating from val:  89%|████████▉ | 222/250 [4:08:08<31:15, 66.97s/it]generating from val:  89%|████████▉ | 223/250 [4:09:16<30:13, 67.16s/it]generating from val:  90%|████████▉ | 224/250 [4:10:23<29:04, 67.11s/it]generating from val:  90%|█████████ | 225/250 [4:11:31<28:00, 67.21s/it]generating from val:  90%|█████████ | 226/250 [4:12:38<26:51, 67.15s/it]generating from val:  91%|█████████ | 227/250 [4:13:45<25:44, 67.15s/it]generating from val:  91%|█████████ | 228/250 [4:14:52<24:38, 67.18s/it]generating from val:  92%|█████████▏| 229/250 [4:15:59<23:29, 67.13s/it]generating from val:  92%|█████████▏| 230/250 [4:17:06<22:21, 67.08s/it]generating from val:  92%|█████████▏| 231/250 [4:18:14<21:17, 67.24s/it]generating from val:  93%|█████████▎| 232/250 [4:19:21<20:12, 67.35s/it]generating from val:  93%|█████████▎| 233/250 [4:20:29<19:05, 67.37s/it]generating from val:  94%|█████████▎| 234/250 [4:21:36<17:56, 67.31s/it]generating from val:  94%|█████████▍| 235/250 [4:22:44<16:52, 67.53s/it]generating from val:  94%|█████████▍| 236/250 [4:23:51<15:43, 67.37s/it]generating from val:  95%|█████████▍| 237/250 [4:24:58<14:36, 67.46s/it]generating from val:  95%|█████████▌| 238/250 [4:26:05<13:27, 67.29s/it]generating from val:  96%|█████████▌| 239/250 [4:27:12<12:19, 67.21s/it]generating from val:  96%|█████████▌| 240/250 [4:28:20<11:13, 67.31s/it]generating from val:  96%|█████████▋| 241/250 [4:29:27<10:04, 67.22s/it]generating from val:  97%|█████████▋| 242/250 [4:30:34<08:57, 67.22s/it]generating from val:  97%|█████████▋| 243/250 [4:31:41<07:49, 67.10s/it]generating from val:  98%|█████████▊| 244/250 [4:32:48<06:42, 67.01s/it]generating from val:  98%|█████████▊| 245/250 [4:33:55<05:34, 66.97s/it]generating from val:  98%|█████████▊| 246/250 [4:35:02<04:28, 67.16s/it]generating from val:  99%|█████████▉| 247/250 [4:36:09<03:20, 66.96s/it]generating from val:  99%|█████████▉| 248/250 [4:37:16<02:14, 67.10s/it]generating from val: 100%|█████████▉| 249/250 [4:38:23<01:06, 66.95s/it]generating from val: 100%|██████████| 250/250 [4:39:29<00:00, 66.87s/it]                                                                        [2024-07-20 18:02:05,692] torch._dynamo.utils: [INFO] TorchDynamo compilation metrics:
[2024-07-20 18:02:05,692] torch._dynamo.utils: [INFO] Function    Runtimes (s)
[2024-07-20 18:02:05,692] torch._dynamo.utils: [INFO] ----------  --------------
